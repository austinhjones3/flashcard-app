{"version":3,"sources":["Layout/Common/Header.js","utils/api/index.js","Layout/Common/ErrorMessage.jsx","Layout/Common/DeckDelete.jsx","Layout/Home/DecksMap.jsx","Layout/Home/CreateDeckButton.jsx","Layout/Home/Home.jsx","Layout/Common/NotFound.js","Layout/Study/StudyNav.jsx","Layout/Study/StudyCards.jsx","Layout/Study/NotEnoughCards.jsx","Layout/Study/Study.jsx","Layout/ViewDeck/ViewNav.jsx","Layout/ViewDeck/ManageDeck.jsx","Layout/Common/CardDelete.jsx","Layout/ViewDeck/CardsList.jsx","Layout/Forms/AddEditCard.jsx","Layout/Forms/EditDeck.jsx","Layout/ViewDeck/View.jsx","Layout/Forms/CreateDeck.jsx","Layout/index.js","App.js","index.js"],"names":["Header","className","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","a","fetch","response","status","Error","statusText","json","name","signal","method","body","JSON","stringify","deckId","updatedDeck","id","card","Number","cardId","updatedCard","append","ErrorMessage","setError","undefined","class","role","to","DeckDelete","decks","error","setDecks","abortController","AbortController","history","useHistory","type","onClick","event","preventDefault","window","confirm","deleteDeck","then","filteredDecks","filter","selected","push","catch","e","console","log","DecksMap","map","index","length","description","CreateDeckButton","Home","useEffect","listDecks","abort","NotFound","StudyNav","aria-label","StudyCards","viewingFront","setIndex","setViewingFront","Object","keys","front","back","NotEnoughCards","Study","useState","useRouteMatch","ViewNav","ManageDeck","CardDelete","setDeck","deleteCard","filteredCards","CardsList","AddEditCard","edit","deckUrl","formData","setFormData","setCard","newDeck","params","changeHandler","target","value","readCard","aria-current","onSubmit","updateCard","findIndex","createCard","htmlFor","rows","placeholder","onChange","required","EditDeck","updateDeck","View","readDeck","path","exact","CreateDeck","newDecks","createDeck","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80907b05.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options) {\n  try {\n    const response = await fetch(url, options);\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ErrorMessage({ setError }) {\n  setError(undefined);\n  return (\n    <div class=\"alert alert-danger\" role=\"alert\">\n      <h4 class=\"alert-heading\">An error occurred during your last request.</h4>\n      <p>Please return to the home page and try again later.</p>\n      <Link to=\"/\">\n        <h5 className=\"text-danger\">\n          <span className=\"oi oi-home\" /> Go Home\n        </h5>\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../../utils/api/index\";\nimport ErrorMessage from \"../Common/ErrorMessage\";\n\nexport default function DeckDelete({ decks, deckId, error, setError, setDecks }) {\n  const abortController = new AbortController();\n  const history = useHistory();\n\n  function handleDelete(event) {\n    event.preventDefault();\n    const answer = window.confirm(\n      \"Delete the deck?\\n\\nYou will not be able to recover it.\"\n    );\n    if (answer) {\n      deleteDeck(deckId, abortController.signal)\n        .then(() => {\n          const filteredDecks = decks.filter((selected) => selected.id !== deckId);\n          setDecks(() => {\n            return [...filteredDecks];\n          });\n        })\n        .then(history.push(\"/\"))\n        .catch((e) => {\n          setError(() => e);\n          console.log(e);\n        });\n    }\n  }\n\n  if (error) {\n    return <ErrorMessage setError={setError} />;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-danger float-right\"\n      onClick={handleDelete}\n    >\n      <span className=\"oi oi-trash\" />\n    </button>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DeckDelete from \"../Common/DeckDelete\";\n\nexport default function DecksMap({ decks, error, setError, setDecks }) {\n  return (\n    <Fragment>\n      {decks.map((deck, index) => (\n        <div className=\"card mb-1\" key={index + 1}>\n          <div className=\"card-body\">\n            <div className=\"d-flex w-100 justify-content-between\">\n              <h5 className=\"card-title\">{deck.name}</h5>\n              {deck.cards ? <small>{deck.cards.length} cards</small> : null}\n            </div>\n            <p className=\"card-text\">{deck.description}</p>\n            <Link className=\"btn btn-secondary mr-1\" to={`/decks/${index + 1}`}>\n              <span className=\"oi oi-eye\" /> View\n            </Link>\n            <Link className=\"btn btn-primary\" to={`/decks/${index + 1}/study`}>\n              <span className=\"oi oi-book\" /> Study\n            </Link>\n            {/* <button type=\"button\" className=\"btn btn-danger float-right\">\n              <span className=\"oi oi-trash\" />\n            </button> */}\n            <DeckDelete\n              decks={decks}\n              deckId={deck.id}\n              error={error}\n              setError={setError}\n              setDecks={setDecks}\n            />\n          </div>\n        </div>\n      ))}\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function CreateDeckButton() {\n  return (\n    <Link className=\"btn btn-secondary mb-2\" to=\"/decks/new\">\n      <span className=\"oi oi-plus\" /> Create a deck\n    </Link>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, Fragment } from \"react\";\nimport { listDecks } from \"../../utils/api/index\";\nimport ErrorMessage from \"../Common/ErrorMessage\";\nimport DecksMap from \"./DecksMap\";\nimport CreateDeckButton from \"./CreateDeckButton\";\n\nexport default function Home({ decks, setDecks, error, setError }) {\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    listDecks(signal)\n      .then(setDecks)\n      .catch((e) => {\n        setError(() => e);\n        console.log(e);\n      });\n    return () => abortController.abort();\n  }, []);\n\n  if (error) {\n    return <ErrorMessage setError={setError} />;\n  }\n\n  return (\n    <Fragment>\n      <CreateDeckButton />\n      <DecksMap\n        decks={decks}\n        setDecks={setDecks}\n        error={error}\n        setError={setError}\n      />\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h2>Not Found</h2>\n      <Link to=\"/\">\n        <h3>Go Home</h3>\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function StudyNav({ deck, deckId }) {\n  return (\n    <nav aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <Link to=\"/\">\n            <span className=\"oi oi-home\" /> Home\n          </Link>\n        </li>\n        <li className=\"breadcrumb-item\">\n          <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n        </li>\n        <li className=\"breadcrumb-item active\">Study</li>\n      </ol>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function StudyCards({\n  deck,\n  index,\n  viewingFront,\n  setIndex,\n  setViewingFront,\n}) {\n  const history = useHistory();\n\n  const flipClickHandler = () => {\n    setViewingFront(() => !viewingFront);\n  };\n\n  const nextClickHandler = () => {\n    if (index + 1 === deck.cards.length) {\n      const answer = window.confirm(\n        \"Restart cards?\\n\\nClick cancel to return to the home page.\"\n      );\n      answer ? setIndex(() => 0) : history.push(\"/\");\n    } else {\n      setIndex(() => index + 1);\n    }\n    setViewingFront(() => true);\n  };\n\n  return (\n    <div className=\"card \">\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">\n          Card {index + 1} of {deck.cards.length}\n        </h4>\n        <p className=\"card-text\">\n          {Object.keys(deck).length !== 0\n            ? viewingFront\n              ? deck.cards[index].front\n              : deck.cards[index].back\n            : null}\n        </p>\n        <button className=\"btn btn-secondary mr-1\" onClick={flipClickHandler}>\n          Flip\n        </button>\n\n        {!viewingFront ? (\n          <button className=\"btn btn-primary\" onClick={nextClickHandler}>\n            Next\n          </button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NotEnoughCards({ deck }) {\n  return (\n    <Fragment>\n      <div className=\"card border-0\">\n        <div className=\"card-body px-0\">\n          <h4 className=\"card-title\">Not Enough Cards</h4>\n          <p className=\"card-text\">\n            You need at least 3 cards to study. There\n            {deck.cards.length === 1\n              ? \" is 1 card \"\n              : ` are ${deck.cards.length} cards `}\n            in this deck.\n          </p>\n          <Link className=\"btn btn-primary\" to={`/decks/${deck.id}/cards/new`}>\n            <span className=\"oi oi-plus\"></span> Add Cards\n          </Link>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { useState, Fragment } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport ErrorMessage from \"../Common/ErrorMessage\";\nimport StudyNav from \"./StudyNav\";\nimport StudyCards from \"./StudyCards\";\nimport NotEnoughCards from \"./NotEnoughCards\";\n\nexport default function Study({ deckId, deck, error, setError }) {\n  const [viewingFront, setViewingFront] = useState(true);\n  const [index, setIndex] = useState(0);\n  const { url } = useRouteMatch();\n\n  if (error) {\n    return <ErrorMessage setError={setError} />;\n  }\n\n  console.log(deck);\n  return (\n    <Fragment>\n      <StudyNav deck={deck} deckId={deckId} />\n      <h2>Study: {deck.name}</h2>\n      {Object.keys(deck).length ? (\n        deck.cards.length > 2 ? (\n          <StudyCards\n            deck={deck}\n            viewingFront={viewingFront}\n            setViewingFront={setViewingFront}\n            index={index}\n            setIndex={setIndex}\n          />\n        ) : (\n          <NotEnoughCards deck={deck} url={url} />\n        )\n      ) : null}\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default function ViewNav({ deck }) {\n  return (\n    <nav aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">\n        <li className=\"breadcrumb-item\">\n          <Link to=\"/\">\n            <span className=\"oi oi-home\" /> Home\n          </Link>\n        </li>\n        <li className=\"breadcrumb-item active\">{deck.name}</li>\n      </ol>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport DeckDelete from \"../Common/DeckDelete\";\n\nexport default function ManageDeck({\n  deck,\n  deckId,\n  decks,\n  setDecks,\n  error,\n  setError,\n}) {\n  const { url } = useRouteMatch();\n  return Object.keys(deck).length > 0 ? (\n    <div className=\"card border-0\">\n      <div className=\"card-body px-0\">\n        <h4 className=\"card-title\">{deck.name}</h4>\n        <p className=\"card-text\">{deck.description}</p>\n        <Link className=\"btn btn-secondary mr-1\" to={`${url}/edit`}>\n          <span className=\"oi oi-pencil\" /> Edit\n        </Link>\n        <Link className=\"btn btn-primary mr-1\" to={`${url}/study`}>\n          <span className=\"oi oi-book\" /> Study\n        </Link>\n        <Link className=\"btn btn-primary mr-1\" to={`${url}/cards/new`}>\n          <span className=\"oi oi-plus\" /> Add Card\n        </Link>\n        <DeckDelete\n          decks={decks}\n          error={error}\n          setError={setError}\n          setDecks={setDecks}\n          deckId={deckId}\n        />\n      </div>\n    </div>\n  ) : null;\n}\n","import React from \"react\";\nimport { deleteCard } from \"../../utils/api/index\";\nimport ErrorMessage from \"../Common/ErrorMessage\";\n\nexport default function CardDelete({ error, setError, deck, cardId, setDeck }) {\n  const abortController = new AbortController();\n\n  function handleDelete(event) {\n    event.preventDefault();\n    const answer = window.confirm(\n      \"Delete the card?\\n\\nYou will not be able to recover it.\"\n    );\n    if (answer) {\n      deleteCard(cardId, abortController.signal)\n        .then(() => {\n          const filteredCards = deck.cards.filter(\n            (selected) => selected.id !== cardId\n          );\n          setDeck(() => {\n            return { ...deck, cards: filteredCards };\n          });\n        })\n        .catch((e) => {\n          setError(() => e);\n          console.log(e);\n        });\n    }\n\n    if (error) {\n      return <ErrorMessage setError={setError} />;\n    }\n  }\n  return (\n    <button type=\"button\" className=\"btn btn-danger ml-1\" onClick={handleDelete}>\n      <span className=\"oi oi-trash\" />\n    </button>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CardDelete from \"../Common/CardDelete\";\n\nexport default function CardsList({ error, setError, setDeck, deck, url }) {\n  return Object.keys(deck).length > 0\n    ? deck.cards.map((card, index) => (\n        <div className=\"card mb-1\" key={index}>\n          <div className=\"card-body\">\n            <span className=\"card-text d-flex row\">\n              <p className=\"col-5\">{card.front}</p>\n              <p className=\"col-2\"></p>\n              <p className=\"col-5\">{card.back}</p>\n            </span>\n            <div className=\"float-right row\">\n              <Link\n                className=\"btn btn-secondary\"\n                to={`${url}/cards/${card.id}/edit`}\n              >\n                <span className=\"oi oi-pencil\" /> Edit\n              </Link>\n              <CardDelete\n                error={error}\n                setError={setError}\n                deck={deck}\n                cardId={card.id}\n                setDeck={setDeck}\n              />\n            </div>\n          </div>\n        </div>\n      ))\n    : null;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport ErrorMessage from \"../Common/ErrorMessage\";\nimport { createCard, readCard, updateCard } from \"../../utils/api/index\";\n\nexport default function AddEditCard({\n  edit,\n  deck,\n  setDeck,\n  deckUrl,\n  deckId,\n  error,\n  setError,\n}) {\n  const [formData, setFormData] = useState({});\n  const [card, setCard] = useState({});\n  const abortController = new AbortController();\n  const history = useHistory();\n  const newDeck = deck;\n  const {\n    params: { cardId },\n  } = useRouteMatch();\n\n  useEffect(() => {\n    if (edit) {\n      readCard(cardId, abortController.signal)\n        .then((response) => {\n          setCard(() => ({ ...card, ...response }));\n        })\n        .catch(setError);\n    } else {\n      setCard(() => ({ ...card, front: \"\", back: \"\" }));\n    }\n    return () => abortController.abort();\n  }, []);\n\n  useEffect(() => {\n    setFormData(() => ({\n      ...formData,\n      ...card,\n    }));\n  }, [card]);\n\n  function changeHandler({ target }) {\n    setFormData(() => ({ ...formData, [target.name]: target.value }));\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    if (edit) {\n      updateCard(formData, abortController.signal)\n        .then((response) => {\n          const index = deck.cards.findIndex((selected) => selected.id === card.id);\n          newDeck.cards[index] = response;\n          setDeck(() => ({ ...newDeck }));\n        })\n        .then(history.push(deckUrl))\n        .catch((e) => {\n          setError(() => e);\n          console.log(e);\n        });\n    } else {\n      createCard(deckId, formData, abortController.signal)\n        .then((response) => {\n          newDeck.cards.push(response);\n          setDeck(() => ({ ...newDeck }));\n        })\n        .then(setFormData(() => ({ ...formData, front: \"\", back: \"\" })))\n        .catch((e) => {\n          setError(() => e);\n          console.log(e);\n        });\n    }\n    return () => abortController.abort();\n  }\n\n  if (error) {\n    return <ErrorMessage setError={setError} />;\n  }\n\n  return (\n    <Fragment>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">\n              <span className=\"oi oi-home\" /> Home\n            </Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={deckUrl}>{deck.name}</Link>\n          </li>\n          {edit ? (\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Edit Card {cardId}\n            </li>\n          ) : (\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Add Card\n            </li>\n          )}\n        </ol>\n      </nav>\n      {edit ? <h2>Edit Card</h2> : <h2>{deck.name}: Add Card</h2>}\n      <form name=\"addCard\" onSubmit={submitHandler}>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlTextarea1\">Front</label>\n          <textarea\n            name=\"front\"\n            value={formData.front}\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            placeholder=\"Front side of card\"\n            onChange={changeHandler}\n            required\n          ></textarea>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlTextarea1\">Back</label>\n          <textarea\n            name=\"back\"\n            value={formData.back}\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            placeholder=\"Back side of card\"\n            onChange={changeHandler}\n            required\n          ></textarea>\n        </div>\n        <Link className=\"btn btn-secondary mr-1\" to={deckUrl}>\n          Cancel\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { updateDeck } from \"../../utils/api/index\";\nimport ErrorMessage from \"../Common/ErrorMessage\";\n\nexport default function EditDeck({ deck, setDeck, deckUrl, error, setError }) {\n  const [formData, setFormData] = useState({ ...deck });\n  const abortController = new AbortController();\n  const history = useHistory();\n  console.log(\"Deck\");\n  console.log(deck);\n  console.log(\"formdata\");\n  console.log(formData);\n\n  function changeHandler({ target }) {\n    setFormData(() => ({ ...formData, [target.name]: target.value }));\n    console.log(formData);\n  }\n\n  useEffect(() => {\n    setFormData(() => ({ ...deck }));\n  }, [deck]);\n\n  function submitHandler(event) {\n    event.preventDefault();\n    updateDeck(formData, abortController.signal)\n      .then((response) => setDeck(() => ({ ...deck, ...response })))\n      .then(history.push(deckUrl))\n      .catch((e) => {\n        setError(() => e);\n        console.log(e);\n      });\n  }\n\n  if (error) {\n    return <ErrorMessage setError={setError} />;\n  }\n\n  return (\n    <Fragment>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">\n              <span className=\"oi oi-home\" /> Home\n            </Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={deckUrl}>{deck.name}</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Edit Deck\n          </li>\n        </ol>\n      </nav>\n      <h2>Edit Deck: {deck.name}</h2>\n      <form name=\"editDeck\" onSubmit={submitHandler}>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlTextarea1\">Name</label>\n          <input\n            required\n            type=\"text\"\n            name=\"name\"\n            value={formData.name}\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            placeholder=\"Deck Name\"\n            onChange={changeHandler}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlTextarea1\">Description</label>\n          <textarea\n            name=\"description\"\n            value={formData.description}\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            placeholder=\"Deck Description\"\n            onChange={changeHandler}\n            required\n          ></textarea>\n        </div>\n        <Link className=\"btn btn-secondary mr-1\" to={`${deckUrl}`}>\n          Cancel\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n        {error ? (\n          <div class=\"alert alert-danger\" role=\"alert\">\n            A simple danger alert—check it out!\n          </div>\n        ) : null}\n      </form>\n    </Fragment>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport Study from \"../Study/Study\";\nimport { readDeck } from \"../../utils/api/index\";\nimport ViewNav from \"./ViewNav\";\nimport ManageDeck from \"./ManageDeck\";\nimport CardsList from \"./CardsList\";\nimport AddEditCard from \"../Forms/AddEditCard\";\nimport EditDeck from \"../Forms/EditDeck\";\n\nexport default function View({ decks, setDecks, error, setError }) {\n  const [deck, setDeck] = useState({});\n  const abortController = new AbortController();\n  const {\n    params: { deckId },\n    url,\n  } = useRouteMatch();\n\n  useEffect(() => {\n    readDeck(deckId, abortController.signal).then(setDeck).catch(setError);\n    return () => abortController.abort();\n  }, []);\n\n  return (\n    <Fragment>\n      <Switch>\n        <Route path={`${url}/cards/:cardId/edit`}>\n          <AddEditCard\n            edit={true}\n            deck={deck}\n            setDeck={setDeck}\n            deckUrl={url}\n            deckId={deckId}\n            error={error}\n            setError={setError}\n          />\n        </Route>\n        <Route path={`${url}/cards/new`}>\n          <AddEditCard\n            edit={false}\n            deck={deck}\n            setDeck={setDeck}\n            deckUrl={url}\n            deckId={deckId}\n            error={error}\n            setError={setError}\n          />\n        </Route>\n        <Route path={`${url}/edit`}>\n          <EditDeck\n            deck={deck}\n            setDeck={setDeck}\n            deckUrl={url}\n            error={error}\n            setError={setError}\n          />\n        </Route>\n        <Route path={`${url}/study`}>\n          <Study\n            deckId={deckId}\n            deck={deck}\n            setDeck={setDeck}\n            error={error}\n            setError={setError}\n          />\n        </Route>\n        <Route exact path={url}>\n          <ViewNav deck={deck} />\n          <ManageDeck\n            deck={deck}\n            decks={decks}\n            error={error}\n            setError={setError}\n            setDecks={setDecks}\n            deckId={deckId}\n          />\n          {Object.keys(deck).length > 0 ? (\n            deck.cards.length > 0 ? (\n              <h2 className=\"mb-3\">Cards</h2>\n            ) : (\n              <h2>There are no cards in this deck yet.</h2>\n            )\n          ) : null}\n          <CardsList\n            error={error}\n            setError={setError}\n            setDeck={setDeck}\n            deck={deck}\n            url={url}\n          />\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createDeck } from \"../../utils/api/index\";\nimport ErrorMessage from \"../Common/ErrorMessage\";\n\nexport default function CreateDeck({ decks, setDecks, error, setError }) {\n  const [formData, setFormData] = useState({ name: \"\", description: \"\" });\n  const history = useHistory();\n  const newDecks = decks;\n\n  function changeHandler({ target }) {\n    setFormData(() => ({ ...formData, [target.name]: target.value }));\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    createDeck(formData, abortController.signal)\n      .then((response) => {\n        newDecks.push(response);\n        setDecks(() => newDecks);\n        history.push(`/decks/${response.id}`);\n      })\n      .catch(setError);\n    return () => abortController.abort();\n  }\n\n  if (error) {\n    return <ErrorMessage setError={setError} />;\n  }\n\n  return (\n    <Fragment>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Create Deck\n          </li>\n        </ol>\n      </nav>\n      <h2>Create Deck</h2>\n      <form name=\"addDeck\" onSubmit={submitHandler}>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlInput1\">Name</label>\n          <input\n            required\n            type=\"text\"\n            name=\"name\"\n            value={formData.name}\n            className=\"form-control\"\n            id=\"exampleFormControlInput1\"\n            placeholder=\"Deck Name\"\n            onChange={changeHandler}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleFormControlTextarea1\">Description</label>\n          <textarea\n            required\n            name=\"description\"\n            value={formData.description}\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            placeholder=\"Deck Description\"\n            onChange={changeHandler}\n          ></textarea>\n        </div>\n        <Link className=\"btn btn-secondary mr-1\" to=\"/\">\n          Cancel\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Common/Header\";\nimport Home from \"./Home/Home\";\nimport NotFound from \"./Common/NotFound\";\nimport View from \"./ViewDeck/View\";\nimport CreateDeck from \"./Forms/CreateDeck\";\n\nexport default function Layout() {\n  const [error, setError] = useState(undefined);\n  const [decks, setDecks] = useState([]);\n\n  return (\n    <Fragment>\n      <Header />\n      <main className=\"container\">\n        <Switch>\n          <Route path=\"/decks/new\">\n            <CreateDeck\n              decks={decks}\n              setDecks={setDecks}\n              error={error}\n              setError={setError}\n            />\n          </Route>\n          <Route path=\"/decks/:deckId\">\n            <View\n              decks={decks}\n              setDecks={setDecks}\n              error={error}\n              setError={setError}\n            />\n          </Route>\n          <Route exact path=\"/\">\n            <Home\n              decks={decks}\n              setDecks={setDecks}\n              error={error}\n              setError={setError}\n            />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </main>\n      <footer className=\"mt-4\"></footer>\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport \"./App.css\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}